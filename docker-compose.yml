version: '3'

services:
###> doctrine/doctrine-bundle ###
  database:
    image: mysql:${MYSQL_VERSION:-8.0.22}
    command: [ "--default-authentication-plugin=mysql_native_password" ]
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-very_secret}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-symfony}
      MYSQL_USER: ${MYSQL_USER:-db_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secret}
    restart: unless-stopped
    networks:
      - shared_network
    volumes:
      - db-data:/var/lib/mysql

###< doctrine/doctrine-bundle ###
  php-fpm:
    build:
      context: ./docker/php-fpm
      args:
        PHP_XDEBUG_MODE: ${PHP_XDEBUG_MODE:-off}
        PHP_XDEBUG_CLIENT_PORT: ${PHP_XDEBUG_CLIENT_PORT:-5902}
        PHP_XDEBUG_CLIENT_HOST: ${PHP_XDEBUG_CLIENT_HOST:-host.docker.internal}
        SYMFONY_CLI_VERSION: 4.23.2
    ports:
      - "${PHP_PORT:-9000}:9001"
    restart: unless-stopped
    volumes:
      - ./:/var/www:cached
      - ./var/log:/var/www/var/log:cached
    networks:
      - shared_network
    depends_on:
      - database
      - elasticsearch
      - redis
      - minio

  nginx:
    build:
      context: ./docker/nginx
      args:
        NGINX_SYMFONY_SERVER_NAME: ${NGINX_SYMFONY_SERVER_NAME}
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - php-fpm
    restart: unless-stopped
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - NGINX_SYMFONY_SERVER_NAME=${NGINX_SYMFONY_SERVER_NAME}
    networks:
      - shared_network
    volumes:
      - ./var/log/nginx:/var/log/nginx:cached
      - ./:/var/www:cached
      - ./docker/nginx/config:/etc/nginx/conf.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    restart: unless-stopped
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
    networks:
      - shared_network
    volumes:
      - db-elastic:/usr/share/elasticsearch/data

  redis:
    image: redis:${REDIS_VERSION:-4}-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-very_secret}
    volumes:
      - disk-redis:/data
    networks:
      - shared_network
    ports:
      - "${REDIS_PORT:-6379}:6379"

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3}-management-alpine
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_ADMIN_PORT:-15672}:15672"
    networks:
      - shared_network
    volumes:
      - disk-rabbit:/var/lib/rabbitmq/
      - ./var/log/rabbitmq/:/var/log/rabbitmq

  cron:
    image: alpine:${ALPINE_VERSION:-3.10}
    command: crond -f -d 8
    depends_on:
      - php-fpm
    networks:
      - shared_network
    volumes:
      - ./docker/cron.txt:/etc/crontabs/root:z
    restart: unless-stopped

  minio:
    image: minio/minio
    command: minio server /data
    restart: unless-stopped
    ports:
      - "${MINIO_PORT:-9998}:9000"
    volumes:
      - ./public/fstorage:/data
    networks:
      - shared_network
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-C6JWe23W7sxChC}

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
    driver: local
###< doctrine/doctrine-bundle ###
  disk-redis:
    driver: local
  db-elastic:
    driver: local
  disk-rabbit:
    driver: local

networks:
  shared_network:
    driver: bridge